use serde::Deserialize;

#[derive(Deserialize, Debug, Clone)]
pub struct Config {
    pub log_level: Option<String>,
    #[serde(default = "default_database_path")]
    pub database_path: String,
    #[serde(default = "default_id_length")]
    pub id_length: usize, // The length of autogenerated ids.
}

fn default_id_length() -> usize {
    5
}

fn default_database_path() -> String {
    String::from("/tmp/todo_dev.db")
}

pub fn get_config() -> Result<Config, envy::Error> {
    envy::from_env::<Config>()
}

#[derive(Deserialize, Debug, Clone)]
pub struct CLIConfig {
    #[serde(default = "default_host")]
    pub host: String,
}

fn default_host() -> String {
    String::from("http://localhost:8080")
}

pub fn get_cli_config() -> Result<CLIConfig, envy::Error> {
    envy::from_env::<CLIConfig>()
}
